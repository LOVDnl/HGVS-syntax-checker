#!/bin/php
<?php
// Created  2025-01-10
// Modified 2025-01-14

$_SETT = [
    'mutalyzer_URL' => 'https://mutalyzer.nl/api/normalize/{{variant}}?only_variants=false',
    'repeat_after_failure' => 1, // Repeat just once after a failure.
];

function run_mutalyzer ($sVariant, $nCount = 0)
{
    // Call Mutalyzer and return the results.
    global $_SETT;

    $aReturn = [
        'status' => '',
        'messages' => [],
        'result' => '',
    ];

    // Always wait to not burden the server too much.
    usleep(500000);
    $sURL = str_replace('{{variant}}', rawurlencode($sVariant), $_SETT['mutalyzer_URL']);
    // Mutalyzer randomly (?) fails when I use PHP.
    // Instead of trying to debug that, just did this.
    $sJSON = `GET "{$sURL}"`;
    if (!$sJSON) {
        if ($nCount >= $_SETT['repeat_after_failure']) {
            // This is the last attempt. Never mind.
            $aReturn['status'] = 'Failure';
            $aReturn['messages']['EFAIL'] = "Mutalyzer failed; it seems to return false.";
            return $aReturn;
        }

        // Try again.
        return run_mutalyzer($sVariant, $nCount + 1);
    }

    return $aReturn;
}





// Check our input.
if (empty($_SERVER['argc']) || $_SERVER['argc'] != 2) {
    if (empty($_SERVER['argv'])) {
        $_SERVER['argv'] = array(
            basename(__FILE__),
        );
    }
    die('Usage: ' . $_SERVER['argv'][0] . " <file_containing_variant_descriptions>\n\n");
}

// Check the file to make sure it's readable.
$sFile = $_SERVER['argv'][1];
if (!is_file($sFile) || !is_readable($sFile)) {
    die("Could not read this file.\n\n");
}

$aInput = preg_split('/\s*\n\s*/', trim(file_get_contents($sFile)));
$aInput = array_map(
    function ($sLine)
    {
        return explode("\t", $sLine);
    }, $aInput);
$aOutput = ['input'];

// Check the header.
if (count($aInput[0]) > 1) {
    $aOutput = array_merge($aOutput, array_fill(0, (count($aInput[0]) - 1), 'unknown_field'));
}
// What fields will we be adding?
$aOutput[] = 'status';
$aOutput[] = 'messages';
$aOutput[] = 'fixed_variant';
print(implode("\t", $aOutput) . "\n");

// Loop through the data and assess the variants.
foreach ($aInput as $aLine) {
    $aOutput = $aLine;
    $sVariant = $aLine[0];
    $aMutalyzer = run_mutalyzer($sVariant);
    $aOutput[] = $aMutalyzer['status'];
    $aOutput[] = json_encode($aMutalyzer['messages']);
    $aOutput[] = $aMutalyzer['result'];
    print(implode("\t", $aOutput) . "\n");
}
?>
